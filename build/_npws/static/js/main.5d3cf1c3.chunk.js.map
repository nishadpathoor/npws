{"version":3,"sources":["Customer/CustomersService.js","Customer/CustomersList.js","Customer/CustomerCreateUpdate.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","CustomerService","Object","classCallCheck","this","url","concat","axios","get","then","response","data","link","pk","customer","delete","post","put","customerService","CustomerList","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","customers","nextPageURL","nextPage","bind","assertThisInitialized","handleDelete","self","getCustomers","result","console","log","setState","nextlink","e","deleteCustomer","newArr","filter","obj","getCustomersByURL","_this2","react_default","a","createElement","className","key","map","c","first_name","last_name","phone","email","address","description","onClick","href","Component","customersService","CustomersService","CustomerCreateUpdate","handleSubmit","params","match","getCustomer","refs","firstName","value","lastName","createCustomer","alert","catch","updateCustomer","event","handleUpdate","handleCreate","preventDefault","onSubmit","type","ref","BaseLayout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router","path","exact","component","CustomersList","App","react_router_dom","App_BaseLayout","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSACMA,EAAU,6BAEKC,aACpB,SAAAA,IAAcC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,8DAGb,IAAMI,EAAG,GAAAC,OAAMN,EAAN,mBACT,OAAOO,IAAMC,IAAIH,GAAKI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,gDAEhCC,GAChB,IAAMP,EAAG,GAAAC,OAAMN,GAANM,OAAgBM,GACzB,OAAOL,IAAMC,IAAIH,GAAKI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,2CAErCE,GACX,IAAMR,EAAG,GAAAC,OAAMN,EAAN,mBAAAM,OAA+BO,GACxC,OAAON,IAAMC,IAAIH,GAAKI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,8CAElCG,GACd,IAAMT,EAAG,GAAAC,OAAMN,EAAN,mBAAAM,OAA+BQ,EAASD,IACjD,OAAON,IAAMQ,OAAOV,0CAENS,GACd,IAAMT,EAAG,GAAAC,OAAMN,EAAN,mBACT,OAAOO,IAAMS,KAAKX,EAAIS,0CAERA,GACd,IAAMT,EAAG,GAAAC,OAAMN,EAAN,mBAAAM,OAA+BQ,EAASD,IACjD,OAAON,IAAMU,IAAIZ,EAAIS,YCzBjBI,EAAkB,IAAIjB,EA4EbkB,cAxEd,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACjBE,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAiB,GAAAK,KAAApB,KAAMgB,KACDK,MAAQ,CACZC,UAAW,GACXC,YAAa,IAEdN,EAAKO,SAAWP,EAAKO,SAASC,KAAd3B,OAAA4B,EAAA,EAAA5B,CAAAmB,IAChBA,EAAKU,aAAeV,EAAKU,aAAaF,KAAlB3B,OAAA4B,EAAA,EAAA5B,CAAAmB,IAPHA,mFAWjB,IAAIW,EAAO5B,KACXc,EAAgBe,eAAexB,KAAK,SAASyB,GAC5CC,QAAQC,IAAIF,GACZF,EAAKK,SAAS,CAAEX,UAAWQ,EAAOvB,KAAMgB,YAAaO,EAAOI,kDAGjDC,EAAE1B,GACd,IAAImB,EAAO5B,KACXc,EAAgBsB,eAAe,CAAC3B,GAAKA,IAAKJ,KAAK,WAC9C,IAAIgC,EAAST,EAAKP,MAAMC,UAAUgB,OAAO,SAASC,GACjD,OAAOA,EAAI9B,KAAOA,IAEnBmB,EAAKK,SAAS,CAACX,UAAWe,yCAI3B,IAAIT,EAAO5B,KACX+B,QAAQC,IAAIhC,KAAKqB,MAAME,aACvBT,EAAgB0B,kBAAkBxC,KAAKqB,MAAME,aAAalB,KAAK,SAACyB,GAC/DF,EAAKK,SAAS,CAACX,UAAWQ,EAAOvB,KAAMgB,YAAaO,EAAOI,8CAGrD,IAAAO,EAAAzC,KACP,OACC0C,EAAAC,EAAAC,cAAA,OAAMC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAQC,UAAU,SAClBH,EAAAC,EAAAC,cAAA,SAAQE,IAAI,SACZJ,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,uBAGDF,EAAAC,EAAAC,cAAA,aACC5C,KAAKqB,MAAMC,UAAUyB,IAAK,SAAAC,GAAC,OAC3BN,EAAAC,EAAAC,cAAA,MAAKE,IAAKE,EAAEvC,IACZiC,EAAAC,EAAAC,cAAA,UAAKI,EAAEvC,GAAP,MACAiC,EAAAC,EAAAC,cAAA,UAAKI,EAAEC,YACPP,EAAAC,EAAAC,cAAA,UAAKI,EAAEE,WACPR,EAAAC,EAAAC,cAAA,UAAKI,EAAEG,OACPT,EAAAC,EAAAC,cAAA,UAAKI,EAAEI,OACPV,EAAAC,EAAAC,cAAA,UAAKI,EAAEK,SACPX,EAAAC,EAAAC,cAAA,UAAKI,EAAEM,aACPZ,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAASW,QAAS,SAACpB,GAAD,OAAOM,EAAKd,aAAaQ,EAAEa,EAAEvC,MAA/C,WACAiC,EAAAC,EAAAC,cAAA,KAAIY,KAAM,aAAeR,EAAEvC,IAA3B,iBAKDiC,EAAAC,EAAAC,cAAA,UAASC,UAAU,kBAAmBU,QAAavD,KAAKwB,UAAxD,gBApEuBiC,aCFrBC,EAAmB,IAAIC,EA4GdC,cAzGX,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACf3C,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA8D,GAAAxC,KAAApB,KAAMgB,KAED6C,aAAe5C,EAAK4C,aAAapC,KAAlB3B,OAAA4B,EAAA,EAAA5B,CAAAmB,IAHLA,mFAME,IAAAwB,EAAAzC,KACA8D,EAAa9D,KAAKgB,MAA3B+C,MAASD,OACdA,GAAUA,EAAOrD,IAElBiD,EAAiBM,YAAYF,EAAOrD,IAAIJ,KAAK,SAAC2C,GAC5CP,EAAKwB,KAAKC,UAAUC,MAAQnB,EAAEC,WAC9BR,EAAKwB,KAAKG,SAASD,MAAQnB,EAAEE,UAC7BT,EAAKwB,KAAKb,MAAMe,MAAQnB,EAAEI,MAC1BX,EAAKwB,KAAKd,MAAMgB,MAAQnB,EAAEG,MAC1BV,EAAKwB,KAAKZ,QAAQc,MAAQnB,EAAEK,QAC5BZ,EAAKwB,KAAKX,YAAYa,MAAQnB,EAAEM,qDAMpCI,EAAiBW,eACf,CACEpB,WAAcjD,KAAKiE,KAAKC,UAAUC,MAClCjB,UAAalD,KAAKiE,KAAKG,SAASD,MAChCf,MAASpD,KAAKiE,KAAKb,MAAMe,MACzBhB,MAASnD,KAAKiE,KAAKd,MAAMgB,MACzBd,QAAWrD,KAAKiE,KAAKZ,QAAQc,MAC7Bb,YAAetD,KAAKiE,KAAKX,YAAYa,QAEvC9D,KAAK,SAACyB,GACNwC,MAAM,uBACLC,MAAM,WACPD,MAAM,yFAGG7D,GACXiD,EAAiBc,eACf,CACE/D,GAAMA,EACNwC,WAAcjD,KAAKiE,KAAKC,UAAUC,MAClCjB,UAAalD,KAAKiE,KAAKG,SAASD,MAChCf,MAASpD,KAAKiE,KAAKb,MAAMe,MACzBhB,MAASnD,KAAKiE,KAAKd,MAAMgB,MACzBd,QAAWrD,KAAKiE,KAAKZ,QAAQc,MAC7Bb,YAAetD,KAAKiE,KAAKX,YAAYa,QAEvC9D,KAAK,SAACyB,GACNC,QAAQC,IAAIF,GACZwC,MAAM,uBACLC,MAAM,WACPD,MAAM,yFAGGG,GAAO,IACDX,EAAa9D,KAAKgB,MAA3B+C,MAASD,OAEdA,GAAUA,EAAOrD,GAClBT,KAAK0E,aAAaZ,EAAOrD,IAIzBT,KAAK2E,eAGPF,EAAMG,kDAIN,OACElC,EAAAC,EAAAC,cAAA,QAAMiC,SAAU7E,KAAK6D,cACrBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,4BAEEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOC,IAAI,cAElDrC,EAAAC,EAAAC,cAAA,2BAEEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOC,IAAI,aAElDrC,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOC,IAAI,UAElDrC,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOC,IAAI,UAElDrC,EAAAC,EAAAC,cAAA,yBAEEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOC,IAAI,YAElDrC,EAAAC,EAAAC,cAAA,6BAEEF,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAekC,IAAI,gBAGzCrC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAkBiC,KAAK,SAASX,MAAM,oBAnGhCV,aCG7BuB,SAAa,kBACjBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeW,KAAK,KAAjC,QACAd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBiC,KAAK,SAASG,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2ByC,GAAG,sBAC3C5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBW,KAAK,KAAtC,aACAd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBW,KAAK,aAAtC,sBAMFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjCjD,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,gBAAiBE,UAAW9B,IACxClB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAW9B,QAiBjCgC,mLARX,OACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACkD,EAAD,cAJUrC,aCtBEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnC,MACvB,2DCZNoC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrG,KAAK,SAAAsG,GACjCA,EAAaC","file":"static/js/main.5d3cf1c3.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_URL = 'https://npws.herokuapp.com';\r\n\r\nexport default class CustomerService{\r\n\tconstructor(){}\r\n\t\r\n\tgetCustomers(){\r\n\t\tconst url = `${API_URL}/api/customers/`;\r\n\t\treturn axios.get(url).then(response => response.data);\r\n\t}\r\n\tgetCustomerByURL(link){\r\n\t\tconst url = `${API_URL}${link}`;\r\n\t\treturn axios.get(url).then(response => response.data);\r\n\t}\r\n\tgetCustomer(pk){\r\n\t\tconst url = `${API_URL}/api/customers/${pk}`;\r\n\t\treturn axios.get(url).then(response => response.data);\r\n\t}\r\n\tdeleteCustomer(customer){\r\n\t\tconst url = `${API_URL}/api/customers/${customer.pk}`;\r\n\t\treturn axios.delete(url);\r\n\t}\r\n\tcreateCustomer(customer){\r\n\t\tconst url = `${API_URL}/api/customers/`;\r\n\t\treturn axios.post(url,customer);\r\n\t}\r\n\tupdateCustomer(customer){\r\n\t\tconst url = `${API_URL}/api/customers/${customer.pk}`;\r\n\t\treturn axios.put(url,customer);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport CustomerService from './CustomersService';\r\n\r\nconst customerService = new CustomerService();\r\n\r\nclass CustomerList extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcustomers: [],\r\n\t\t\tnextPageURL: ''\r\n\t\t};\r\n\t\tthis.nextPage = this.nextPage.bind(this);\r\n\t\tthis.handleDelete = this.handleDelete.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n\t\tvar self = this;\r\n\t\tcustomerService.getCustomers().then(function(result){\r\n\t\t\tconsole.log(result);\r\n\t\t\tself.setState({ customers: result.data, nextPageURL: result.nextlink})\r\n\t\t});\t\t\r\n\t}\r\n\thandleDelete(e,pk){\r\n\t\tvar self = this;\r\n\t\tcustomerService.deleteCustomer({pk : pk}).then(()=>{\r\n\t\t\tvar newArr = self.state.customers.filter(function(obj){\r\n\t\t\t\treturn obj.pk !== pk;\r\n\t\t\t});\r\n\t\t\tself.setState({customers: newArr})\r\n\t\t});\r\n\t}\r\n\tnextPage(){\r\n\t\tvar self = this;\r\n\t\tconsole.log(this.state.nextPageURL);\r\n\t\tcustomerService.getCustomersByURL(this.state.nextPageURL).then((result) => {\r\n\t\t\tself.setState({customers: result.data, nextPageURL: result.nextlink})\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div  className=\"customers--list\">\r\n\t\t\t\t<table  className=\"table\">\r\n\t\t\t\t<thead  key=\"thead\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Actions</th>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{this.state.customers.map( c  =>\r\n\t\t\t\t\t<tr  key={c.pk}>\r\n\t\t\t\t\t<td>{c.pk}  </td>\r\n\t\t\t\t\t<td>{c.first_name}</td>\r\n\t\t\t\t\t<td>{c.last_name}</td>\r\n\t\t\t\t\t<td>{c.phone}</td>\r\n\t\t\t\t\t<td>{c.email}</td>\r\n\t\t\t\t\t<td>{c.address}</td>\r\n\t\t\t\t\t<td>{c.description}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t<button  onClick={(e)=>  this.handleDelete(e,c.pk) }> Delete</button>\r\n\t\t\t\t\t<a  href={\"/customer/\" + c.pk}> Update</a>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>)}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<button  className=\"btn btn-primary\"  onClick=  {  this.nextPage  }>Next</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CustomerList;\r\n","import React, { Component } from 'react';\r\nimport CustomersService from './CustomersService';\r\n\r\nconst customersService = new CustomersService();\r\n\r\nclass CustomerCreateUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n      componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        if(params && params.pk)\r\n        {\r\n          customersService.getCustomer(params.pk).then((c)=>{\r\n            this.refs.firstName.value = c.first_name;\r\n            this.refs.lastName.value = c.last_name;\r\n            this.refs.email.value = c.email;\r\n            this.refs.phone.value = c.phone;\r\n            this.refs.address.value = c.address;\r\n            this.refs.description.value = c.description;\r\n          })\r\n        }\r\n      }\r\n\r\n      handleCreate(){\r\n        customersService.createCustomer(\r\n          {\r\n            \"first_name\": this.refs.firstName.value,\r\n            \"last_name\": this.refs.lastName.value,\r\n            \"email\": this.refs.email.value,\r\n            \"phone\": this.refs.phone.value,\r\n            \"address\": this.refs.address.value,\r\n            \"description\": this.refs.description.value\r\n        }          \r\n        ).then((result)=>{\r\n          alert(\"Customer created!\");\r\n        }).catch(()=>{\r\n          alert('There was an error! Please re-check your form.');\r\n        });\r\n      }\r\n      handleUpdate(pk){\r\n        customersService.updateCustomer(\r\n          {\r\n            \"pk\": pk,\r\n            \"first_name\": this.refs.firstName.value,\r\n            \"last_name\": this.refs.lastName.value,\r\n            \"email\": this.refs.email.value,\r\n            \"phone\": this.refs.phone.value,\r\n            \"address\": this.refs.address.value,\r\n            \"description\": this.refs.description.value\r\n        }          \r\n        ).then((result)=>{\r\n          console.log(result);\r\n          alert(\"Customer updated!\");\r\n        }).catch(()=>{\r\n          alert('There was an error! Please re-check your form.');\r\n        });\r\n      }\r\n      handleSubmit(event) {\r\n        const { match: { params } } = this.props;\r\n\r\n        if(params && params.pk){\r\n          this.handleUpdate(params.pk);\r\n        }\r\n        else\r\n        {\r\n          this.handleCreate();\r\n        }\r\n\r\n        event.preventDefault();\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              First Name:</label>\r\n              <input className=\"form-control\" type=\"text\" ref='firstName' />\r\n\r\n            <label>\r\n              Last Name:</label>\r\n              <input className=\"form-control\" type=\"text\" ref='lastName'/>\r\n\r\n            <label>\r\n              Phone:</label>\r\n              <input className=\"form-control\" type=\"text\" ref='phone' />\r\n\r\n            <label>\r\n              Email:</label>\r\n              <input className=\"form-control\" type=\"text\" ref='email' />\r\n\r\n            <label>\r\n              Address:</label>\r\n              <input className=\"form-control\" type=\"text\" ref='address' />\r\n\r\n            <label>\r\n              Description:</label>\r\n              <textarea className=\"form-control\" ref='description' ></textarea>\r\n\r\n\r\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </form>\r\n        );\r\n      }  \r\n}\r\n\r\nexport default CustomerCreateUpdate;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport  CustomersList from './Customer/CustomersList'\r\nimport  CustomerCreateUpdate  from './Customer/CustomerCreateUpdate'\r\nimport './App.css';\r\n\r\nconst BaseLayout = () => (\r\n  <div className=\"container-fluid\">\r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"#\">npws</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n      <a className=\"nav-item nav-link\" href=\"/\">CUSTOMERS</a>\r\n      <a className=\"nav-item nav-link\" href=\"/customer\">CREATE CUSTOMER</a>\r\n\r\n    </div>\r\n  </div>\r\n</nav>  \r\n\r\n    <div className=\"content\">\r\n      <Route path=\"/\" exact component={CustomersList} />\r\n      <Route path=\"/customer/:pk\"  component={CustomerCreateUpdate} />\r\n      <Route path=\"/customer/\" exact component={CustomerCreateUpdate} />\r\n\r\n    </div>\r\n\r\n  </div>\r\n)\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <BaseLayout/>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}